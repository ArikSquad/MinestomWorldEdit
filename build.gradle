import io.minio.MinioClient
import io.minio.ObjectWriteArgs
import io.minio.UploadObjectArgs

buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven {
			name 'JitPack'
			url 'https://jitpack.io'
		}
	}
	dependencies {
		classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
		classpath 'com.github.IntellectualSites.FastAsyncWorldEdit:ap:1.16-462'
		classpath "io.minio:minio:8.3.3"
	}
}

apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

compileJava   {
	sourceCompatibility = targetCompatibility = JavaVersion.VERSION_16
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spongepowered.org/maven' }
	maven { url 'https://repo.velocitypowered.com/snapshots/' }
	maven { url 'https://jitpack.io' }
	maven {
		name = "IntellectualSites Releases"
		url = uri("https://mvn.intellectualsites.com/content/repositories/releases/")
	}
	maven { url = "https://maven.enginehub.org/repo/" }
}

dependencies {
	compileOnly project(":minestom")
	//implementation('com.github.Minestom:Minestom:-SNAPSHOT')
	//compileOnly project(":gauntlet")

	//implementation "com.fastasyncworldedit:FAWE-Core:1.17-6"
	implementation "com.sk89q.worldedit:worldedit-core:7.3.0-SNAPSHOT"
	implementation("org.spongepowered:configurate-yaml:4.1.1");
}

shadowJar {
}

build.dependsOn shadowJar

task uploadWE {
	doLast {
		MinioClient minioClient = MinioClient.builder().endpoint("http://51.222.24.246:9000/")
				.credentials("$System.env.GAUNTLET_MINIO_USER", "$System.env.GAUNTLET_MINIO_KEY")
				.build();
		minioClient.uploadObject(UploadObjectArgs.builder()
				.bucket("gauntletjars")
				.object("MinestomWorldEdit.jar")
				.filename("./build/libs/MinestomWorldEdit-all.jar", ObjectWriteArgs.MAX_PART_SIZE)
				.build())
	}
}
uploadWE.dependsOn build


